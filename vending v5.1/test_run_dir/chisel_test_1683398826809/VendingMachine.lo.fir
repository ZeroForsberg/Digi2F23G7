FIRRTL version 1.1.0
circuit VendingMachine :
  module SevenSegDec :
    input clock : Clock
    input reset : UInt<1>
    input io_in : UInt<5>
    output io_out : UInt<7>
    output io_out2 : UInt<7>

    node _T = eq(UInt<1>("h0"), io_in) @[SevenSegDec.scala 27:17]
    node _T_1 = eq(UInt<1>("h1"), io_in) @[SevenSegDec.scala 27:17]
    node _T_2 = eq(UInt<2>("h2"), io_in) @[SevenSegDec.scala 27:17]
    node _T_3 = eq(UInt<2>("h3"), io_in) @[SevenSegDec.scala 27:17]
    node _T_4 = eq(UInt<3>("h4"), io_in) @[SevenSegDec.scala 27:17]
    node _T_5 = eq(UInt<3>("h5"), io_in) @[SevenSegDec.scala 27:17]
    node _T_6 = eq(UInt<3>("h6"), io_in) @[SevenSegDec.scala 27:17]
    node _T_7 = eq(UInt<3>("h7"), io_in) @[SevenSegDec.scala 27:17]
    node _T_8 = eq(UInt<4>("h8"), io_in) @[SevenSegDec.scala 27:17]
    node _T_9 = eq(UInt<4>("h9"), io_in) @[SevenSegDec.scala 27:17]
    node _T_10 = eq(UInt<4>("ha"), io_in) @[SevenSegDec.scala 27:17]
    node _T_11 = eq(UInt<4>("hb"), io_in) @[SevenSegDec.scala 27:17]
    node _T_12 = eq(UInt<4>("hc"), io_in) @[SevenSegDec.scala 27:17]
    node _T_13 = eq(UInt<4>("hd"), io_in) @[SevenSegDec.scala 27:17]
    node _T_14 = eq(UInt<4>("he"), io_in) @[SevenSegDec.scala 27:17]
    node _T_15 = eq(UInt<4>("hf"), io_in) @[SevenSegDec.scala 27:17]
    node _T_16 = eq(UInt<5>("h10"), io_in) @[SevenSegDec.scala 27:17]
    node _T_17 = eq(UInt<5>("h11"), io_in) @[SevenSegDec.scala 27:17]
    node _T_18 = eq(UInt<5>("h12"), io_in) @[SevenSegDec.scala 27:17]
    node _T_19 = eq(UInt<5>("h13"), io_in) @[SevenSegDec.scala 27:17]
    node _T_20 = eq(UInt<5>("h14"), io_in) @[SevenSegDec.scala 27:17]
    node _T_21 = eq(UInt<5>("h15"), io_in) @[SevenSegDec.scala 27:17]
    node _T_22 = eq(UInt<5>("h16"), io_in) @[SevenSegDec.scala 27:17]
    node _T_23 = eq(UInt<5>("h17"), io_in) @[SevenSegDec.scala 27:17]
    node _T_24 = eq(UInt<5>("h18"), io_in) @[SevenSegDec.scala 27:17]
    node _T_25 = eq(UInt<5>("h19"), io_in) @[SevenSegDec.scala 27:17]
    node _T_26 = eq(UInt<5>("h1a"), io_in) @[SevenSegDec.scala 27:17]
    node _T_27 = eq(UInt<5>("h1b"), io_in) @[SevenSegDec.scala 27:17]
    node _T_28 = eq(UInt<5>("h1c"), io_in) @[SevenSegDec.scala 27:17]
    node _T_29 = eq(UInt<5>("h1d"), io_in) @[SevenSegDec.scala 27:17]
    node _T_30 = eq(UInt<5>("h1e"), io_in) @[SevenSegDec.scala 27:17]
    node _T_31 = eq(UInt<5>("h1f"), io_in) @[SevenSegDec.scala 27:17]
    node _GEN_0 = mux(_T_31, UInt<3>("h6"), UInt<1>("h0")) @[SevenSegDec.scala 27:17 11:27 59:29]
    node _GEN_1 = mux(_T_30, UInt<6>("h3f"), _GEN_0) @[SevenSegDec.scala 27:17 58:29]
    node _GEN_2 = mux(_T_29, UInt<7>("h6f"), _GEN_1) @[SevenSegDec.scala 27:17 57:29]
    node _GEN_3 = mux(_T_28, UInt<7>("h7f"), _GEN_2) @[SevenSegDec.scala 27:17 56:29]
    node _GEN_4 = mux(_T_27, UInt<3>("h7"), _GEN_3) @[SevenSegDec.scala 27:17 55:29]
    node _GEN_5 = mux(_T_26, UInt<7>("h7d"), _GEN_4) @[SevenSegDec.scala 27:17 54:29]
    node _GEN_6 = mux(_T_25, UInt<7>("h6d"), _GEN_5) @[SevenSegDec.scala 27:17 53:29]
    node _GEN_7 = mux(_T_24, UInt<7>("h66"), _GEN_6) @[SevenSegDec.scala 27:17 52:29]
    node _GEN_8 = mux(_T_23, UInt<7>("h4f"), _GEN_7) @[SevenSegDec.scala 27:17 51:29]
    node _GEN_9 = mux(_T_22, UInt<7>("h5b"), _GEN_8) @[SevenSegDec.scala 27:17 50:29]
    node _GEN_10 = mux(_T_21, UInt<3>("h6"), _GEN_9) @[SevenSegDec.scala 27:17 49:29]
    node _GEN_11 = mux(_T_20, UInt<6>("h3f"), _GEN_10) @[SevenSegDec.scala 27:17 48:29]
    node _GEN_12 = mux(_T_19, UInt<7>("h6f"), _GEN_11) @[SevenSegDec.scala 27:17 47:29]
    node _GEN_13 = mux(_T_18, UInt<7>("h7f"), _GEN_12) @[SevenSegDec.scala 27:17 46:29]
    node _GEN_14 = mux(_T_17, UInt<3>("h7"), _GEN_13) @[SevenSegDec.scala 27:17 45:29]
    node _GEN_15 = mux(_T_16, UInt<7>("h7d"), _GEN_14) @[SevenSegDec.scala 27:17 44:29]
    node _GEN_16 = mux(_T_15, UInt<7>("h6d"), _GEN_15) @[SevenSegDec.scala 27:17 43:29]
    node _GEN_17 = mux(_T_14, UInt<7>("h66"), _GEN_16) @[SevenSegDec.scala 27:17 42:29]
    node _GEN_18 = mux(_T_13, UInt<7>("h4f"), _GEN_17) @[SevenSegDec.scala 27:17 41:29]
    node _GEN_19 = mux(_T_12, UInt<7>("h5b"), _GEN_18) @[SevenSegDec.scala 27:17 40:29]
    node _GEN_20 = mux(_T_11, UInt<3>("h6"), _GEN_19) @[SevenSegDec.scala 27:17 39:29]
    node _GEN_21 = mux(_T_10, UInt<6>("h3f"), _GEN_20) @[SevenSegDec.scala 27:17 38:29]
    node _GEN_22 = mux(_T_9, UInt<7>("h6f"), _GEN_21) @[SevenSegDec.scala 27:17 37:29]
    node _GEN_23 = mux(_T_8, UInt<7>("h7f"), _GEN_22) @[SevenSegDec.scala 27:17 36:29]
    node _GEN_24 = mux(_T_7, UInt<3>("h7"), _GEN_23) @[SevenSegDec.scala 27:17 35:29]
    node _GEN_25 = mux(_T_6, UInt<7>("h7d"), _GEN_24) @[SevenSegDec.scala 27:17 34:29]
    node _GEN_26 = mux(_T_5, UInt<7>("h6d"), _GEN_25) @[SevenSegDec.scala 27:17 33:29]
    node _GEN_27 = mux(_T_4, UInt<7>("h66"), _GEN_26) @[SevenSegDec.scala 27:17 32:29]
    node _GEN_28 = mux(_T_3, UInt<7>("h4f"), _GEN_27) @[SevenSegDec.scala 27:17 31:29]
    node _GEN_29 = mux(_T_2, UInt<7>("h5b"), _GEN_28) @[SevenSegDec.scala 27:17 30:29]
    node _GEN_30 = mux(_T_1, UInt<3>("h6"), _GEN_29) @[SevenSegDec.scala 27:17 29:29]
    node _GEN_31 = mux(_T, UInt<6>("h3f"), _GEN_30) @[SevenSegDec.scala 27:17 28:29]
    node _T_32 = eq(UInt<1>("h0"), io_in) @[SevenSegDec.scala 62:17]
    node _T_33 = eq(UInt<1>("h1"), io_in) @[SevenSegDec.scala 62:17]
    node _T_34 = eq(UInt<2>("h2"), io_in) @[SevenSegDec.scala 62:17]
    node _T_35 = eq(UInt<2>("h3"), io_in) @[SevenSegDec.scala 62:17]
    node _T_36 = eq(UInt<3>("h4"), io_in) @[SevenSegDec.scala 62:17]
    node _T_37 = eq(UInt<3>("h5"), io_in) @[SevenSegDec.scala 62:17]
    node _T_38 = eq(UInt<3>("h6"), io_in) @[SevenSegDec.scala 62:17]
    node _T_39 = eq(UInt<3>("h7"), io_in) @[SevenSegDec.scala 62:17]
    node _T_40 = eq(UInt<4>("h8"), io_in) @[SevenSegDec.scala 62:17]
    node _T_41 = eq(UInt<4>("h9"), io_in) @[SevenSegDec.scala 62:17]
    node _T_42 = eq(UInt<4>("ha"), io_in) @[SevenSegDec.scala 62:17]
    node _T_43 = eq(UInt<4>("hb"), io_in) @[SevenSegDec.scala 62:17]
    node _T_44 = eq(UInt<4>("hc"), io_in) @[SevenSegDec.scala 62:17]
    node _T_45 = eq(UInt<4>("hd"), io_in) @[SevenSegDec.scala 62:17]
    node _T_46 = eq(UInt<4>("he"), io_in) @[SevenSegDec.scala 62:17]
    node _T_47 = eq(UInt<4>("hf"), io_in) @[SevenSegDec.scala 62:17]
    node _T_48 = eq(UInt<5>("h10"), io_in) @[SevenSegDec.scala 62:17]
    node _T_49 = eq(UInt<5>("h11"), io_in) @[SevenSegDec.scala 62:17]
    node _T_50 = eq(UInt<5>("h12"), io_in) @[SevenSegDec.scala 62:17]
    node _T_51 = eq(UInt<5>("h13"), io_in) @[SevenSegDec.scala 62:17]
    node _T_52 = eq(UInt<5>("h14"), io_in) @[SevenSegDec.scala 62:17]
    node _T_53 = eq(UInt<5>("h15"), io_in) @[SevenSegDec.scala 62:17]
    node _T_54 = eq(UInt<5>("h16"), io_in) @[SevenSegDec.scala 62:17]
    node _T_55 = eq(UInt<5>("h17"), io_in) @[SevenSegDec.scala 62:17]
    node _T_56 = eq(UInt<5>("h18"), io_in) @[SevenSegDec.scala 62:17]
    node _T_57 = eq(UInt<5>("h19"), io_in) @[SevenSegDec.scala 62:17]
    node _T_58 = eq(UInt<5>("h1a"), io_in) @[SevenSegDec.scala 62:17]
    node _T_59 = eq(UInt<5>("h1b"), io_in) @[SevenSegDec.scala 62:17]
    node _T_60 = eq(UInt<5>("h1c"), io_in) @[SevenSegDec.scala 62:17]
    node _T_61 = eq(UInt<5>("h1d"), io_in) @[SevenSegDec.scala 62:17]
    node _T_62 = eq(UInt<5>("h1e"), io_in) @[SevenSegDec.scala 62:17]
    node _T_63 = eq(UInt<5>("h1f"), io_in) @[SevenSegDec.scala 62:17]
    node _GEN_32 = mux(_T_63, UInt<7>("h4f"), UInt<1>("h0")) @[SevenSegDec.scala 62:17 12:28 94:30]
    node _GEN_33 = mux(_T_62, UInt<7>("h4f"), _GEN_32) @[SevenSegDec.scala 62:17 93:30]
    node _GEN_34 = mux(_T_61, UInt<7>("h5b"), _GEN_33) @[SevenSegDec.scala 62:17 92:30]
    node _GEN_35 = mux(_T_60, UInt<7>("h5b"), _GEN_34) @[SevenSegDec.scala 62:17 91:30]
    node _GEN_36 = mux(_T_59, UInt<7>("h5b"), _GEN_35) @[SevenSegDec.scala 62:17 90:30]
    node _GEN_37 = mux(_T_58, UInt<7>("h5b"), _GEN_36) @[SevenSegDec.scala 62:17 89:30]
    node _GEN_38 = mux(_T_57, UInt<7>("h5b"), _GEN_37) @[SevenSegDec.scala 62:17 88:30]
    node _GEN_39 = mux(_T_56, UInt<7>("h5b"), _GEN_38) @[SevenSegDec.scala 62:17 87:30]
    node _GEN_40 = mux(_T_55, UInt<7>("h5b"), _GEN_39) @[SevenSegDec.scala 62:17 86:30]
    node _GEN_41 = mux(_T_54, UInt<7>("h5b"), _GEN_40) @[SevenSegDec.scala 62:17 85:30]
    node _GEN_42 = mux(_T_53, UInt<7>("h5b"), _GEN_41) @[SevenSegDec.scala 62:17 84:30]
    node _GEN_43 = mux(_T_52, UInt<7>("h5b"), _GEN_42) @[SevenSegDec.scala 62:17 83:30]
    node _GEN_44 = mux(_T_51, UInt<3>("h6"), _GEN_43) @[SevenSegDec.scala 62:17 82:30]
    node _GEN_45 = mux(_T_50, UInt<3>("h6"), _GEN_44) @[SevenSegDec.scala 62:17 81:30]
    node _GEN_46 = mux(_T_49, UInt<3>("h6"), _GEN_45) @[SevenSegDec.scala 62:17 80:30]
    node _GEN_47 = mux(_T_48, UInt<3>("h6"), _GEN_46) @[SevenSegDec.scala 62:17 79:30]
    node _GEN_48 = mux(_T_47, UInt<3>("h6"), _GEN_47) @[SevenSegDec.scala 62:17 78:30]
    node _GEN_49 = mux(_T_46, UInt<3>("h6"), _GEN_48) @[SevenSegDec.scala 62:17 77:30]
    node _GEN_50 = mux(_T_45, UInt<3>("h6"), _GEN_49) @[SevenSegDec.scala 62:17 76:30]
    node _GEN_51 = mux(_T_44, UInt<3>("h6"), _GEN_50) @[SevenSegDec.scala 62:17 75:30]
    node _GEN_52 = mux(_T_43, UInt<3>("h6"), _GEN_51) @[SevenSegDec.scala 62:17 74:30]
    node _GEN_53 = mux(_T_42, UInt<3>("h6"), _GEN_52) @[SevenSegDec.scala 62:17 73:30]
    node _GEN_54 = mux(_T_41, UInt<6>("h3f"), _GEN_53) @[SevenSegDec.scala 62:17 72:30]
    node _GEN_55 = mux(_T_40, UInt<6>("h3f"), _GEN_54) @[SevenSegDec.scala 62:17 71:30]
    node _GEN_56 = mux(_T_39, UInt<6>("h3f"), _GEN_55) @[SevenSegDec.scala 62:17 70:30]
    node _GEN_57 = mux(_T_38, UInt<6>("h3f"), _GEN_56) @[SevenSegDec.scala 62:17 69:30]
    node _GEN_58 = mux(_T_37, UInt<6>("h3f"), _GEN_57) @[SevenSegDec.scala 62:17 68:30]
    node _GEN_59 = mux(_T_36, UInt<6>("h3f"), _GEN_58) @[SevenSegDec.scala 62:17 67:30]
    node _GEN_60 = mux(_T_35, UInt<6>("h3f"), _GEN_59) @[SevenSegDec.scala 62:17 66:30]
    node _GEN_61 = mux(_T_34, UInt<6>("h3f"), _GEN_60) @[SevenSegDec.scala 62:17 65:30]
    node _GEN_62 = mux(_T_33, UInt<6>("h3f"), _GEN_61) @[SevenSegDec.scala 62:17 64:30]
    node _GEN_63 = mux(_T_32, UInt<6>("h3f"), _GEN_62) @[SevenSegDec.scala 62:17 63:30]
    node sevSeg = _GEN_31 @[SevenSegDec.scala 11:27]
    node sevSeg2 = _GEN_63 @[SevenSegDec.scala 12:28]
    io_out <= sevSeg @[SevenSegDec.scala 97:10]
    io_out2 <= sevSeg2 @[SevenSegDec.scala 98:11]

  module DisplayMultiplexer :
    input clock : Clock
    input reset : UInt<1>
    input io_sum : UInt<5>
    input io_price : UInt<5>
    output io_seg : UInt<7>
    output io_an : UInt<4>
    input io_sumAlarm : UInt<1>
    input io_priceAlarm : UInt<1>
    input io_EPty : UInt<1>

    inst sevenSegdec of SevenSegDec @[DisplayMultiplexer.scala 15:27]
    reg tickCounterReg : UInt<17>, clock with :
      reset => (UInt<1>("h0"), tickCounterReg) @[DisplayMultiplexer.scala 28:31]
    reg next : UInt<2>, clock with :
      reset => (UInt<1>("h0"), next) @[DisplayMultiplexer.scala 32:21]
    node _tickCounterReg_T = add(tickCounterReg, UInt<1>("h1")) @[DisplayMultiplexer.scala 35:36]
    node _tickCounterReg_T_1 = tail(_tickCounterReg_T, 1) @[DisplayMultiplexer.scala 35:36]
    node _T = eq(tickCounterReg, UInt<3>("h4")) @[DisplayMultiplexer.scala 36:24]
    node _next_T = add(next, UInt<1>("h1")) @[DisplayMultiplexer.scala 37:18]
    node _next_T_1 = tail(_next_T, 1) @[DisplayMultiplexer.scala 37:18]
    node _GEN_0 = mux(_T, _next_T_1, next) @[DisplayMultiplexer.scala 36:34 37:10 32:21]
    node _GEN_1 = mux(_T, UInt<1>("h0"), _tickCounterReg_T_1) @[DisplayMultiplexer.scala 35:18 36:34 38:20]
    node _T_1 = eq(next, UInt<1>("h0")) @[DisplayMultiplexer.scala 42:29]
    node _T_2 = eq(next, UInt<1>("h1")) @[DisplayMultiplexer.scala 42:44]
    node _T_3 = or(_T_1, _T_2) @[DisplayMultiplexer.scala 42:37]
    node _T_4 = and(io_sumAlarm, _T_3) @[DisplayMultiplexer.scala 42:20]
    node _GEN_2 = mux(_T_4, UInt<1>("h0"), sevenSegdec.io_out2) @[DisplayMultiplexer.scala 25:11 42:53 43:13]
    node _T_12 = eq(next, UInt<2>("h2")) @[DisplayMultiplexer.scala 59:15]
    node _T_13 = eq(next, UInt<2>("h3")) @[DisplayMultiplexer.scala 59:30]
    node _T_14 = or(_T_12, _T_13) @[DisplayMultiplexer.scala 59:23]
    node _T_9 = eq(next, UInt<1>("h0")) @[DisplayMultiplexer.scala 54:15]
    node _T_10 = eq(next, UInt<1>("h1")) @[DisplayMultiplexer.scala 54:30]
    node _T_11 = or(_T_9, _T_10) @[DisplayMultiplexer.scala 54:23]
    node _T_5 = eq(next, UInt<2>("h2")) @[DisplayMultiplexer.scala 48:31]
    node _T_6 = eq(next, UInt<2>("h3")) @[DisplayMultiplexer.scala 48:46]
    node _T_7 = or(_T_5, _T_6) @[DisplayMultiplexer.scala 48:39]
    node _T_8 = and(io_priceAlarm, _T_7) @[DisplayMultiplexer.scala 48:22]
    node _GEN_4 = mux(_T_8, UInt<1>("h0"), _GEN_2) @[DisplayMultiplexer.scala 48:56 49:13]
    node _GEN_6 = mux(_T_11, UInt<7>("h79"), _GEN_4) @[DisplayMultiplexer.scala 54:38 56:15]
    node _GEN_8 = mux(_T_14, UInt<7>("h78"), _GEN_6) @[DisplayMultiplexer.scala 59:39 60:15]
    node _GEN_10 = mux(io_EPty, _GEN_8, _GEN_4) @[DisplayMultiplexer.scala 53:16]
    node sevSeg2 = _GEN_10 @[DisplayMultiplexer.scala 19:28]
    node _GEN_3 = mux(_T_4, sevSeg2, sevenSegdec.io_out) @[DisplayMultiplexer.scala 24:11 42:53 44:13]
    node _GEN_5 = mux(_T_8, sevSeg2, _GEN_3) @[DisplayMultiplexer.scala 48:56 50:13]
    node _GEN_7 = mux(_T_11, UInt<7>("h73"), _GEN_5) @[DisplayMultiplexer.scala 54:38 57:15]
    node _GEN_9 = mux(_T_14, UInt<7>("h6e"), _GEN_7) @[DisplayMultiplexer.scala 59:39 61:15]
    node _GEN_11 = mux(io_EPty, _GEN_9, _GEN_5) @[DisplayMultiplexer.scala 53:16]
    node _T_15 = eq(UInt<1>("h0"), next) @[DisplayMultiplexer.scala 65:16]
    node _T_16 = eq(UInt<1>("h1"), next) @[DisplayMultiplexer.scala 65:16]
    node _T_17 = eq(UInt<2>("h2"), next) @[DisplayMultiplexer.scala 65:16]
    node _T_18 = eq(UInt<2>("h3"), next) @[DisplayMultiplexer.scala 65:16]
    node _GEN_12 = mux(_T_18, UInt<4>("he"), UInt<4>("h1")) @[DisplayMultiplexer.scala 65:16 82:14 20:27]
    node _GEN_13 = mux(_T_18, io_price, UInt<1>("h0")) @[DisplayMultiplexer.scala 65:16 23:21 83:25]
    node sevSeg1 = _GEN_11 @[DisplayMultiplexer.scala 18:28]
    node _GEN_14 = mux(_T_18, sevSeg1, UInt<7>("h7f")) @[DisplayMultiplexer.scala 65:16 84:14 17:27]
    node _GEN_15 = mux(_T_17, UInt<4>("hd"), _GEN_12) @[DisplayMultiplexer.scala 65:16 77:14]
    node _GEN_16 = mux(_T_17, io_price, _GEN_13) @[DisplayMultiplexer.scala 65:16 78:25]
    node _GEN_17 = mux(_T_17, sevSeg2, _GEN_14) @[DisplayMultiplexer.scala 65:16 79:14]
    node _GEN_18 = mux(_T_16, UInt<4>("hb"), _GEN_15) @[DisplayMultiplexer.scala 65:16 72:14]
    node _GEN_19 = mux(_T_16, io_sum, _GEN_16) @[DisplayMultiplexer.scala 65:16 73:25]
    node _GEN_20 = mux(_T_16, sevSeg1, _GEN_17) @[DisplayMultiplexer.scala 65:16 74:14]
    node _GEN_21 = mux(_T_15, UInt<3>("h7"), _GEN_18) @[DisplayMultiplexer.scala 65:16 67:14]
    node _GEN_22 = mux(_T_15, io_sum, _GEN_19) @[DisplayMultiplexer.scala 65:16 68:25]
    node _GEN_23 = mux(_T_15, sevSeg2, _GEN_20) @[DisplayMultiplexer.scala 65:16 69:14]
    node sevSeg = _GEN_23 @[DisplayMultiplexer.scala 17:27]
    node _io_seg_T = not(sevSeg) @[DisplayMultiplexer.scala 90:13]
    node select = _GEN_21 @[DisplayMultiplexer.scala 20:27]
    io_seg <= _io_seg_T @[DisplayMultiplexer.scala 90:10]
    io_an <= select @[DisplayMultiplexer.scala 91:9]
    sevenSegdec.clock <= clock
    sevenSegdec.reset <= reset
    sevenSegdec.io_in <= _GEN_22
    tickCounterReg <= mux(reset, UInt<17>("h0"), _GEN_1) @[DisplayMultiplexer.scala 28:{31,31}]
    next <= mux(reset, UInt<2>("h0"), _GEN_0) @[DisplayMultiplexer.scala 32:{21,21}]

  module VendingMachine :
    input clock : Clock
    input reset : UInt<1>
    input io_price : UInt<5>
    input io_coin2 : UInt<1>
    input io_coin5 : UInt<1>
    input io_buy : UInt<1>
    output io_releaseCan : UInt<1>
    output io_alarm : UInt<1>
    output io_seg : UInt<7>
    output io_an : UInt<4>
    output io_led1 : UInt<1>
    output io_led2 : UInt<1>
    output io_led3 : UInt<1>
    output io_led4 : UInt<1>

    inst dispMux of DisplayMultiplexer @[VendingMachine.scala 22:23]
    reg sumCnt : UInt<5>, clock with :
      reset => (UInt<1>("h0"), sumCnt) @[VendingMachine.scala 25:23]
    reg countCoin : UInt<3>, clock with :
      reset => (UInt<1>("h0"), countCoin) @[VendingMachine.scala 26:26]
    reg countCan : UInt<3>, clock with :
      reset => (UInt<1>("h0"), countCan) @[VendingMachine.scala 27:25]
    reg blink5 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), blink5) @[VendingMachine.scala 28:23]
    reg sumReg : UInt<5>, clock with :
      reset => (UInt<1>("h0"), sumReg) @[VendingMachine.scala 35:23]
    node _T = eq(UInt<1>("h0"), countCoin) @[VendingMachine.scala 56:20]
    node _T_1 = eq(UInt<1>("h1"), countCoin) @[VendingMachine.scala 56:20]
    node _T_2 = eq(UInt<2>("h2"), countCoin) @[VendingMachine.scala 56:20]
    node _T_3 = eq(UInt<2>("h3"), countCoin) @[VendingMachine.scala 56:20]
    node _T_4 = eq(UInt<3>("h4"), countCoin) @[VendingMachine.scala 56:20]
    node _GEN_0 = mux(_T_4, UInt<1>("h0"), UInt<1>("h0")) @[VendingMachine.scala 56:20 83:15 30:28]
    node _GEN_1 = mux(_T_4, UInt<1>("h1"), UInt<1>("h0")) @[VendingMachine.scala 56:20 85:15 32:28]
    node _GEN_2 = mux(_T_3, UInt<1>("h1"), _GEN_0) @[VendingMachine.scala 56:20 77:15]
    node _GEN_3 = mux(_T_3, UInt<1>("h0"), _GEN_1) @[VendingMachine.scala 56:20 79:15]
    node _GEN_4 = mux(_T_2, UInt<1>("h0"), _GEN_2) @[VendingMachine.scala 56:20 71:15]
    node _GEN_5 = mux(_T_2, UInt<1>("h1"), _GEN_2) @[VendingMachine.scala 56:20 72:15]
    node _GEN_6 = mux(_T_2, UInt<1>("h0"), _GEN_3) @[VendingMachine.scala 56:20 73:15]
    node _GEN_7 = mux(_T_1, UInt<1>("h1"), _GEN_4) @[VendingMachine.scala 56:20 65:15]
    node _GEN_8 = mux(_T_1, UInt<1>("h0"), _GEN_5) @[VendingMachine.scala 56:20 66:15]
    node _GEN_9 = mux(_T_1, UInt<1>("h0"), _GEN_6) @[VendingMachine.scala 56:20 67:15]
    node _GEN_10 = mux(_T, UInt<1>("h0"), _GEN_7) @[VendingMachine.scala 56:20 59:15]
    node _GEN_11 = mux(_T, UInt<1>("h0"), _GEN_8) @[VendingMachine.scala 56:20 60:15]
    node _GEN_12 = mux(_T, UInt<1>("h0"), _GEN_9) @[VendingMachine.scala 56:20 61:15]
    node cntflg1 = _GEN_10 @[VendingMachine.scala 30:28]
    node cntflg2 = _GEN_11 @[VendingMachine.scala 31:28]
    node _io_led1_T = or(cntflg1, cntflg2) @[VendingMachine.scala 89:23]
    node cntflg3 = _GEN_12 @[VendingMachine.scala 32:28]
    node _io_led1_T_1 = or(_io_led1_T, cntflg3) @[VendingMachine.scala 89:33]
    node _io_led2_T = or(cntflg2, cntflg3) @[VendingMachine.scala 90:23]
    node _io_led3_T = and(cntflg1, cntflg2) @[VendingMachine.scala 91:23]
    node _io_led3_T_1 = or(_io_led3_T, cntflg3) @[VendingMachine.scala 91:34]
    node _io_led4_T = eq(cntflg1, UInt<1>("h0")) @[VendingMachine.scala 92:26]
    node _io_led4_T_1 = and(cntflg3, _io_led4_T) @[VendingMachine.scala 92:23]
    node _io_led4_T_2 = eq(cntflg2, UInt<1>("h0")) @[VendingMachine.scala 92:38]
    node _io_led4_T_3 = and(_io_led4_T_1, _io_led4_T_2) @[VendingMachine.scala 92:35]
    reg state : UInt<2>, clock with :
      reset => (UInt<1>("h0"), state) @[VendingMachine.scala 96:22]
    node _T_5 = eq(io_buy, UInt<1>("h0")) @[VendingMachine.scala 98:8]
    node _T_6 = eq(UInt<1>("h0"), state) @[VendingMachine.scala 104:16]
    reg REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG) @[VendingMachine.scala 106:30]
    node _T_7 = eq(REG, UInt<1>("h0")) @[VendingMachine.scala 106:22]
    node _T_8 = and(io_buy, _T_7) @[VendingMachine.scala 106:19]
    node _T_9 = geq(sumReg, io_price) @[VendingMachine.scala 107:21]
    node _sumReg_T = sub(sumReg, io_price) @[VendingMachine.scala 108:28]
    node _sumReg_T_1 = tail(_sumReg_T, 1) @[VendingMachine.scala 108:28]
    node _countCan_T = sub(countCan, UInt<1>("h1")) @[VendingMachine.scala 111:32]
    node _countCan_T_1 = tail(_countCan_T, 1) @[VendingMachine.scala 111:32]
    node _T_10 = lt(sumReg, io_price) @[VendingMachine.scala 113:27]
    node _GEN_13 = mux(_T_10, UInt<2>("h2"), state) @[VendingMachine.scala 113:38 114:17 96:22]
    node _GEN_14 = mux(_T_9, _sumReg_T_1, sumReg) @[VendingMachine.scala 107:33 108:18 35:23]
    node _GEN_15 = mux(_T_9, UInt<1>("h1"), _GEN_13) @[VendingMachine.scala 107:33 109:17]
    node _GEN_16 = mux(_T_9, UInt<1>("h0"), countCoin) @[VendingMachine.scala 107:33 110:21 26:26]
    node _GEN_17 = mux(_T_9, _countCan_T_1, countCan) @[VendingMachine.scala 107:33 111:20 27:25]
    node _GEN_18 = mux(_T_9, UInt<3>("h4"), blink5) @[VendingMachine.scala 107:33 112:18 28:23]
    node _GEN_19 = mux(_T_8, _GEN_14, sumReg) @[VendingMachine.scala 106:39 35:23]
    node _GEN_20 = mux(_T_8, _GEN_15, state) @[VendingMachine.scala 106:39 96:22]
    node _GEN_21 = mux(_T_8, _GEN_16, countCoin) @[VendingMachine.scala 106:39 26:26]
    node _GEN_22 = mux(_T_8, _GEN_17, countCan) @[VendingMachine.scala 106:39 27:25]
    node _GEN_23 = mux(_T_8, _GEN_18, blink5) @[VendingMachine.scala 106:39 28:23]
    node _T_11 = eq(countCan, UInt<1>("h0")) @[VendingMachine.scala 118:21]
    node _GEN_24 = mux(_T_11, UInt<2>("h3"), _GEN_20) @[VendingMachine.scala 118:30 119:15]
    reg REG_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_1) @[VendingMachine.scala 123:32]
    node _T_12 = eq(REG_1, UInt<1>("h0")) @[VendingMachine.scala 123:24]
    node _T_13 = and(io_coin2, _T_12) @[VendingMachine.scala 123:21]
    node _T_14 = eq(cntflg3, UInt<1>("h0")) @[VendingMachine.scala 123:46]
    node _T_15 = and(_T_13, _T_14) @[VendingMachine.scala 123:43]
    node _sumReg_T_2 = add(sumReg, UInt<2>("h2")) @[VendingMachine.scala 124:26]
    node _sumReg_T_3 = tail(_sumReg_T_2, 1) @[VendingMachine.scala 124:26]
    node _countCoin_T = add(countCoin, UInt<1>("h1")) @[VendingMachine.scala 125:32]
    node _countCoin_T_1 = tail(_countCoin_T, 1) @[VendingMachine.scala 125:32]
    node _GEN_25 = mux(_T_15, _sumReg_T_3, _GEN_19) @[VendingMachine.scala 123:56 124:16]
    node _GEN_26 = mux(_T_15, _countCoin_T_1, _GEN_21) @[VendingMachine.scala 123:56 125:19]
    reg REG_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_2) @[VendingMachine.scala 127:32]
    node _T_16 = eq(REG_2, UInt<1>("h0")) @[VendingMachine.scala 127:24]
    node _T_17 = and(io_coin5, _T_16) @[VendingMachine.scala 127:21]
    node _T_18 = eq(cntflg3, UInt<1>("h0")) @[VendingMachine.scala 127:46]
    node _T_19 = and(_T_17, _T_18) @[VendingMachine.scala 127:43]
    node _sumReg_T_4 = add(sumReg, UInt<3>("h5")) @[VendingMachine.scala 128:26]
    node _sumReg_T_5 = tail(_sumReg_T_4, 1) @[VendingMachine.scala 128:26]
    node _countCoin_T_2 = add(countCoin, UInt<1>("h1")) @[VendingMachine.scala 129:32]
    node _countCoin_T_3 = tail(_countCoin_T_2, 1) @[VendingMachine.scala 129:32]
    node _GEN_27 = mux(_T_19, _sumReg_T_5, _GEN_25) @[VendingMachine.scala 127:56 128:16]
    node _GEN_28 = mux(_T_19, _countCoin_T_3, _GEN_26) @[VendingMachine.scala 127:56 129:19]
    node _T_20 = eq(UInt<1>("h1"), state) @[VendingMachine.scala 104:16]
    reg REG_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_3) @[VendingMachine.scala 135:27]
    node _T_21 = eq(REG_3, UInt<1>("h0")) @[VendingMachine.scala 135:19]
    reg next : UInt<2>, clock with :
      reset => (UInt<1>("h0"), next) @[VendingMachine.scala 176:21]
    node _T_33 = eq(UInt<1>("h0"), next) @[VendingMachine.scala 184:16]
    node _T_34 = eq(UInt<1>("h1"), next) @[VendingMachine.scala 184:16]
    node _T_35 = eq(UInt<2>("h2"), next) @[VendingMachine.scala 184:16]
    node _T_36 = eq(UInt<2>("h3"), next) @[VendingMachine.scala 184:16]
    node _GEN_66 = mux(_T_36, UInt<1>("h0"), UInt<1>("h0")) @[VendingMachine.scala 184:16 198:11 40:24]
    node _GEN_67 = mux(_T_35, UInt<1>("h0"), _GEN_66) @[VendingMachine.scala 184:16 194:11]
    node _GEN_69 = mux(_T_34, UInt<1>("h1"), _GEN_67) @[VendingMachine.scala 184:16 190:11]
    node _GEN_71 = mux(_T_33, UInt<1>("h1"), _GEN_69) @[VendingMachine.scala 184:16 186:11]
    node LED = _GEN_71 @[VendingMachine.scala 40:24]
    node _T_22 = and(LED, _T_21) @[VendingMachine.scala 135:16]
    node _T_23 = eq(blink5, UInt<1>("h0")) @[VendingMachine.scala 136:21]
    node _blink5_T = sub(blink5, UInt<1>("h1")) @[VendingMachine.scala 139:28]
    node _blink5_T_1 = tail(_blink5_T, 1) @[VendingMachine.scala 139:28]
    node _GEN_29 = mux(_T_23, UInt<1>("h0"), state) @[VendingMachine.scala 136:29 137:17 96:22]
    node _GEN_30 = mux(_T_23, blink5, _blink5_T_1) @[VendingMachine.scala 136:29 139:18 28:23]
    node _GEN_31 = mux(_T_22, _GEN_29, state) @[VendingMachine.scala 135:33 96:22]
    node _GEN_32 = mux(_T_22, _GEN_30, blink5) @[VendingMachine.scala 135:33 28:23]
    node _T_24 = eq(UInt<2>("h2"), state) @[VendingMachine.scala 104:16]
    reg REG_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_4) @[VendingMachine.scala 148:27]
    node _T_25 = eq(REG_4, UInt<1>("h0")) @[VendingMachine.scala 148:19]
    node _T_26 = and(LED, _T_25) @[VendingMachine.scala 148:16]
    node _T_27 = eq(blink5, UInt<1>("h0")) @[VendingMachine.scala 149:21]
    node _blink5_T_2 = sub(blink5, UInt<1>("h1")) @[VendingMachine.scala 152:28]
    node _blink5_T_3 = tail(_blink5_T_2, 1) @[VendingMachine.scala 152:28]
    node _GEN_33 = mux(_T_27, UInt<1>("h0"), state) @[VendingMachine.scala 149:30 150:17 96:22]
    node _GEN_34 = mux(_T_27, blink5, _blink5_T_3) @[VendingMachine.scala 149:30 152:18 28:23]
    node _GEN_35 = mux(_T_26, _GEN_33, state) @[VendingMachine.scala 148:34 96:22]
    node _GEN_36 = mux(_T_26, _GEN_34, blink5) @[VendingMachine.scala 148:34 28:23]
    node _T_28 = eq(UInt<2>("h3"), state) @[VendingMachine.scala 104:16]
    reg REG_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_5) @[VendingMachine.scala 160:27]
    node _T_29 = eq(REG_5, UInt<1>("h0")) @[VendingMachine.scala 160:19]
    node _T_30 = and(LED, _T_29) @[VendingMachine.scala 160:16]
    node _T_31 = eq(blink5, UInt<1>("h0")) @[VendingMachine.scala 161:21]
    node _blink5_T_4 = sub(blink5, UInt<1>("h1")) @[VendingMachine.scala 164:28]
    node _blink5_T_5 = tail(_blink5_T_4, 1) @[VendingMachine.scala 164:28]
    node _GEN_37 = mux(_T_31, UInt<1>("h0"), state) @[VendingMachine.scala 161:30 162:17 96:22]
    node _GEN_38 = mux(_T_31, blink5, _blink5_T_5) @[VendingMachine.scala 161:30 164:18 28:23]
    node _GEN_39 = mux(_T_30, _GEN_37, state) @[VendingMachine.scala 160:34 96:22]
    node _GEN_40 = mux(_T_30, _GEN_38, blink5) @[VendingMachine.scala 160:34 28:23]
    node _GEN_41 = mux(_T_28, UInt<1>("h1"), UInt<1>("h0")) @[VendingMachine.scala 104:16 159:23 53:19]
    node _GEN_42 = mux(_T_28, _GEN_39, state) @[VendingMachine.scala 104:16 96:22]
    node _GEN_43 = mux(_T_28, _GEN_40, blink5) @[VendingMachine.scala 104:16 28:23]
    node _GEN_44 = mux(_T_24, LED, UInt<1>("h0")) @[VendingMachine.scala 104:16 146:29 52:25]
    node _GEN_45 = mux(_T_24, UInt<1>("h1"), UInt<1>("h0")) @[VendingMachine.scala 104:16 147:14 42:27]
    node _GEN_46 = mux(_T_24, _GEN_35, _GEN_42) @[VendingMachine.scala 104:16]
    node _GEN_47 = mux(_T_24, _GEN_36, _GEN_43) @[VendingMachine.scala 104:16]
    node _GEN_48 = mux(_T_24, UInt<1>("h0"), _GEN_41) @[VendingMachine.scala 104:16 53:19]
    node _GEN_49 = mux(_T_20, LED, UInt<1>("h0")) @[VendingMachine.scala 104:16 134:21 46:17]
    node _GEN_50 = mux(_T_20, _GEN_31, _GEN_46) @[VendingMachine.scala 104:16]
    node _GEN_51 = mux(_T_20, _GEN_32, _GEN_47) @[VendingMachine.scala 104:16]
    node _GEN_52 = mux(_T_20, UInt<1>("h0"), _GEN_44) @[VendingMachine.scala 104:16 52:25]
    node _GEN_53 = mux(_T_20, UInt<1>("h0"), _GEN_45) @[VendingMachine.scala 104:16 42:27]
    node _GEN_54 = mux(_T_20, UInt<1>("h0"), _GEN_48) @[VendingMachine.scala 104:16 53:19]
    node _GEN_55 = mux(_T_6, _GEN_27, sumReg) @[VendingMachine.scala 104:16 35:23]
    node _GEN_56 = mux(_T_6, _GEN_24, _GEN_50) @[VendingMachine.scala 104:16]
    node _GEN_57 = mux(_T_6, _GEN_28, countCoin) @[VendingMachine.scala 104:16 26:26]
    node _GEN_58 = mux(_T_6, _GEN_22, countCan) @[VendingMachine.scala 104:16 27:25]
    node _GEN_59 = mux(_T_6, _GEN_23, _GEN_51) @[VendingMachine.scala 104:16]
    node _GEN_60 = mux(_T_6, UInt<1>("h0"), _GEN_49) @[VendingMachine.scala 104:16 46:17]
    node _GEN_61 = mux(_T_6, UInt<1>("h0"), _GEN_52) @[VendingMachine.scala 104:16 52:25]
    node _GEN_62 = mux(_T_6, UInt<1>("h0"), _GEN_53) @[VendingMachine.scala 104:16 42:27]
    node _GEN_63 = mux(_T_6, UInt<1>("h0"), _GEN_54) @[VendingMachine.scala 104:16 53:19]
    reg tickCounterReg : UInt<27>, clock with :
      reset => (UInt<1>("h0"), tickCounterReg) @[VendingMachine.scala 172:31]
    node _tickCounterReg_T = add(tickCounterReg, UInt<1>("h1")) @[VendingMachine.scala 178:36]
    node _tickCounterReg_T_1 = tail(_tickCounterReg_T, 1) @[VendingMachine.scala 178:36]
    node _T_32 = eq(tickCounterReg, UInt<6>("h31")) @[VendingMachine.scala 179:23]
    node _next_T = add(next, UInt<1>("h1")) @[VendingMachine.scala 180:18]
    node _next_T_1 = tail(_next_T, 1) @[VendingMachine.scala 180:18]
    node _GEN_64 = mux(_T_32, _next_T_1, next) @[VendingMachine.scala 179:33 180:10 176:21]
    node _GEN_65 = mux(_T_32, UInt<1>("h0"), _tickCounterReg_T_1) @[VendingMachine.scala 178:18 179:33 181:20]
    node _GEN_68 = mux(_T_35, UInt<1>("h1"), _GEN_66) @[VendingMachine.scala 184:16 195:13]
    node _GEN_70 = mux(_T_34, UInt<1>("h0"), _GEN_68) @[VendingMachine.scala 184:16 191:13]
    node _GEN_72 = mux(_T_33, UInt<1>("h1"), _GEN_70) @[VendingMachine.scala 184:16 187:13]
    reg REG_6 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_6) @[VendingMachine.scala 203:25]
    node _T_37 = eq(REG_6, UInt<1>("h0")) @[VendingMachine.scala 203:17]
    node count = _GEN_72 @[VendingMachine.scala 41:26]
    node _T_38 = and(count, _T_37) @[VendingMachine.scala 203:14]
    node _T_39 = eq(count, UInt<1>("h0")) @[VendingMachine.scala 203:35]
    reg REG_7 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_7) @[VendingMachine.scala 203:52]
    node _T_40 = and(_T_39, REG_7) @[VendingMachine.scala 203:42]
    node _T_41 = or(_T_38, _T_40) @[VendingMachine.scala 203:33]
    node _T_42 = lt(sumCnt, sumReg) @[VendingMachine.scala 204:17]
    node _sumCnt_T = add(sumCnt, UInt<1>("h1")) @[VendingMachine.scala 205:24]
    node _sumCnt_T_1 = tail(_sumCnt_T, 1) @[VendingMachine.scala 205:24]
    node _GEN_73 = mux(_T_42, _sumCnt_T_1, sumCnt) @[VendingMachine.scala 204:26 205:14 25:23]
    node _T_43 = gt(sumCnt, sumReg) @[VendingMachine.scala 207:17]
    node _sumCnt_T_2 = sub(sumCnt, UInt<1>("h1")) @[VendingMachine.scala 208:24]
    node _sumCnt_T_3 = tail(_sumCnt_T_2, 1) @[VendingMachine.scala 208:24]
    node _GEN_74 = mux(_T_43, _sumCnt_T_3, _GEN_73) @[VendingMachine.scala 207:27 208:14]
    node _GEN_75 = mux(_T_41, _GEN_74, sumCnt) @[VendingMachine.scala 203:60 25:23]
    node _coinFull_T = or(io_coin5, io_coin2) @[VendingMachine.scala 214:26]
    node _coinFull_T_1 = and(_coinFull_T, cntflg3) @[VendingMachine.scala 214:38]
    node _coinFull_T_2 = eq(state, UInt<2>("h2")) @[VendingMachine.scala 214:58]
    node _coinFull_T_3 = or(_coinFull_T_1, _coinFull_T_2) @[VendingMachine.scala 214:50]
    node noCash = _GEN_62 @[VendingMachine.scala 42:27]
    node coinFull = _coinFull_T_3 @[VendingMachine.scala 214:12 43:29]
    node _io_alarm_T = or(noCash, coinFull) @[VendingMachine.scala 216:23]
    node _io_alarm_T_1 = or(_io_alarm_T, dispMux.io_EPty) @[VendingMachine.scala 216:34]
    node _io_alarm_T_2 = and(_io_alarm_T_1, LED) @[VendingMachine.scala 216:53]
    node _dispMux_io_sumAlarm_T = or(io_coin5, io_coin2) @[VendingMachine.scala 217:36]
    node _dispMux_io_sumAlarm_T_1 = and(_dispMux_io_sumAlarm_T, cntflg3) @[VendingMachine.scala 217:48]
    node _dispMux_io_sumAlarm_T_2 = and(_dispMux_io_sumAlarm_T_1, LED) @[VendingMachine.scala 217:59]
    node _dispMux_io_price_T = bits(io_price, 4, 0) @[VendingMachine.scala 219:31]
    node sevSeg = UInt<7>("h7f") @[VendingMachine.scala 23:{27,27}]
    io_releaseCan <= _GEN_60
    io_alarm <= _io_alarm_T_2 @[VendingMachine.scala 216:12]
    io_seg <= dispMux.io_seg @[VendingMachine.scala 222:10]
    io_an <= dispMux.io_an @[VendingMachine.scala 223:9]
    io_led1 <= _io_led1_T_1 @[VendingMachine.scala 89:11]
    io_led2 <= _io_led2_T @[VendingMachine.scala 90:11]
    io_led3 <= _io_led3_T_1 @[VendingMachine.scala 91:11]
    io_led4 <= _io_led4_T_3 @[VendingMachine.scala 92:11]
    dispMux.clock <= clock
    dispMux.reset <= reset
    dispMux.io_sum <= sumCnt @[VendingMachine.scala 220:18]
    dispMux.io_price <= _dispMux_io_price_T @[VendingMachine.scala 219:20]
    dispMux.io_sumAlarm <= _dispMux_io_sumAlarm_T_2 @[VendingMachine.scala 217:23]
    dispMux.io_priceAlarm <= _GEN_61
    dispMux.io_EPty <= _GEN_63
    sumCnt <= mux(reset, UInt<5>("h0"), _GEN_75) @[VendingMachine.scala 25:{23,23}]
    countCoin <= mux(reset, UInt<3>("h0"), _GEN_57) @[VendingMachine.scala 26:{26,26}]
    countCan <= mux(reset, UInt<3>("h4"), _GEN_58) @[VendingMachine.scala 27:{25,25}]
    blink5 <= mux(reset, UInt<3>("h0"), _GEN_59) @[VendingMachine.scala 28:{23,23}]
    sumReg <= mux(reset, UInt<5>("h0"), _GEN_55) @[VendingMachine.scala 35:{23,23}]
    state <= mux(reset, UInt<2>("h0"), _GEN_56) @[VendingMachine.scala 96:{22,22}]
    REG <= io_buy @[VendingMachine.scala 106:30]
    REG_1 <= io_coin2 @[VendingMachine.scala 123:32]
    REG_2 <= io_coin5 @[VendingMachine.scala 127:32]
    REG_3 <= LED @[VendingMachine.scala 135:27]
    REG_4 <= LED @[VendingMachine.scala 148:27]
    REG_5 <= LED @[VendingMachine.scala 160:27]
    tickCounterReg <= mux(reset, UInt<27>("h0"), _GEN_65) @[VendingMachine.scala 172:{31,31}]
    next <= mux(reset, UInt<2>("h0"), _GEN_64) @[VendingMachine.scala 176:{21,21}]
    REG_6 <= count @[VendingMachine.scala 203:25]
    REG_7 <= count @[VendingMachine.scala 203:52]
