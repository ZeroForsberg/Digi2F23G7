$date
2023-05-03T12:40+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module VendingMachine $end
 $var wire 4 $ io_an $end
 $var wire 1 + REG $end
 $var wire 1 - io_buy $end
 $var wire 5 . sumReg $end
 $var wire 7 0 io_seg $end
 $var wire 1 1 io_alarm $end
 $var wire 1 2 io_releaseCan $end
 $var wire 1 3 reset $end
 $var wire 5 5 io_price $end
 $var wire 1 7 dispMux $end
 $var wire 1 8 REG_2 $end
 $var wire 1 9 REG_1 $end
 $var wire 1 < io_coin5 $end
 $var wire 1 = io_coin2 $end
 $var wire 1 > clock $end
  $scope module dispMux.sevenSegdec $end
  $upscope $end
  $scope module dispMux $end
   $var wire 4 ! io_an $end
   $var wire 17 " tickCounterReg $end
   $var wire 7 % io_seg $end
   $var wire 5 & io_sum $end
   $var wire 1 ' sevenSegdec $end
   $var wire 7 ) sevSeg1 $end
   $var wire 7 * sevSeg2 $end
   $var wire 1 , clock $end
   $var wire 5 4 io_price $end
   $var wire 1 6 reset $end
   $var wire 2 : next $end
   $var wire 4 ; select $end
   $var wire 7 @ sevSeg $end
    $scope module sevenSegdec $end
     $var wire 7 # sevSeg2 $end
     $var wire 4 ( io_in $end
     $var wire 7 / io_out $end
     $var wire 7 ? io_out2 $end
     $var wire 7 A sevSeg $end
    $upscope $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000000000000 "
01
02
03
06
07
b00 :
08
09
0<
0=
0>
b0000000 ?
b00000 &
b0000000 A
b0000000 @
b00000 .
b0000 $
b0000000 *
b00000 5
b00000 4
b0000000 /
b0000 !
b0000000 0
b0000000 #
b0000000 %
b0000 (
b0000000 )
0'
b0000 ;
0+
0,
0-
$end
#0
b0111111 @
b0111 !
b0111111 A
b0111111 #
b0111 $
b1000000 %
b0111111 )
b0111111 *
b0111111 /
b1000000 0
13
16
b0111 ;
b0111111 ?
#1
1,
1>
#6
03
b00111 4
b00111 5
06
0,
0>
#11
b00000000000000001 "
1,
1>
#16
0,
0>
#21
b00000000000000010 "
1,
1>
#26
0,
0>
#31
b00000000000000011 "
1,
1>
#36
0,
1=
0>
#41
b1011011 A
b00000000000000100 "
b00010 &
b0010 (
b1011011 )
1+
1,
b00010 .
1>
b1011011 /
#46
0,
0>
#51
b00000000000000101 "
1,
1>
#56
0,
0>
#61
b00000000000000110 "
1,
1>
#66
0,
0=
0>
#71
b00000000000000111 "
0+
1,
1>
#76
0,
0>
#81
b00000000000001000 "
1,
1>
#86
0,
0>
#91
b00000000000001001 "
1,
1>
#96
0,
0>
#101
b00000000000001010 "
1,
1>
#106
0,
0>
#111
b00000000000001011 "
1,
1>
#116
0,
0>
#121
b00000000000001100 "
1,
1>
#126
0,
1<
0>
#131
b0000111 A
b00000000000001101 "
b00111 &
b0111 (
b0000111 )
19
1,
b00111 .
1>
b0000111 /
#136
0,
0>
#141
b00000000000001110 "
1,
1>
#146
0,
0>
#151
b00000000000001111 "
1,
1>
#156
0,
0<
0>
#161
b00000000000010000 "
09
1,
1>
#166
0,
0>
#171
b00000000000010001 "
1,
1>
#176
0,
0>
#181
b00000000000010010 "
1,
1>
#186
0,
0>
#191
b00000000000010011 "
1,
1>
#196
0,
0>
#201
b00000000000010100 "
1,
1>
#206
0,
0>
#211
b00000000000010101 "
1,
1>
#216
0,
0>
#221
b00000000000010110 "
1,
1>
#226
0,
0>
#231
b00000000000010111 "
1,
1>
#236
12
0,
1-
0>
#241
b0111111 A
b00000000000011000 "
b00000 &
b0000 (
b0111111 )
1,
b00000 .
b0111111 /
11
02
18
1>
#246
0,
0>
#251
b00000000000011001 "
1,
1>
#256
0,
0>
#261
b00000000000011010 "
1,
1>
#266
01
0,
0-
0>
#271
b00000000000011011 "
08
1,
1>
#276
0,
0>
#281
b00000000000011100 "
1,
1>
#286
0,
0>
#291
b00000000000011101 "
1,
1>
#296
0,
0>
#301
b00000000000011110 "
1,
1>
#306
0,
0>
#311
b00000000000011111 "
1,
1>
#316
0,
0>
#321
b00000000000100000 "
1,
1>
#326
0,
0>
#331
b00000000000100001 "
1,
1>
#336
0,
0>
#341
b00000000000100010 "
1,
1>
#346
0,
0>
#351
b00000000000100011 "
1,
1>
#356
0,
0>
#361
b00000000000100100 "
1,
1>
#366
b00000 5
0>
